-- @path qu=/at.ac.tuwien.big.questionnaire2form/metamodels/questionnaire.ecore
-- @path fo=/at.ac.tuwien.big.questionnaire2form/metamodels/form.ecore

module questionnaire2form;
create OUT: fo from IN: qu;

helper def : id : Integer = 0;
helper context Integer def: inc() : Integer = self + 1;

rule Questionnaire2Form {
	from q: qu!Questionnaire
	to f: fo!Form (
		pages <- q.questionGroups
	)
}

rule QuestionGroup2Page {
	from qg: qu!QuestionGroup
	to p: fo!Page(
		title <- qg.name,		
		elements <- h1,
		elements <- h2,
		elements <- qg.questions,
		allNextPages <- p.refImmediateComposite().pages ->
						select(q | q.refImmediateComposite().pages -> indexOf(q)  >
								   q.refImmediateComposite().pages -> indexOf(p)),
		allPreviousPages <- p.refImmediateComposite().pages ->
						select(q | q.refImmediateComposite().pages -> indexOf(q)  <
								   q.refImmediateComposite().pages -> indexOf(p)),
								   
		previousPage <- p.allPreviousPages.last(),
		nextPage <- p.allNextPages.first()
	),
	
	h1 : fo!Heading(
		level <- 1,
		content <- qg.refImmediateComposite().title,
		page <- p
	),

	h2 : fo!Heading(
		level <- 2,
		content <- qg.name,
		page <- p
	)
	
	do {
		thisModule.id <- thisModule.id.inc();
		h1.elementId <- thisModule.id.toString();
		thisModule.id <- thisModule.id.inc();
		h2.elementId <- thisModule.id.toString();
	}
}


rule OpenEndedQuestion_SL_2TextField {
	from o: qu!OpenEndedQuestion (o.multiline = false)
	to tf: fo!TextField(
		label <- o.text,
		mandatory <- o.mandatory
	)
	do {
		thisModule.id <- thisModule.id.inc();
		tf.elementId <- thisModule.id.toString();
	}
}

rule OpenEndedQuestion_ML_2TextArea {
	from o: qu!OpenEndedQuestion (o.multiline = true)
	to ta: fo!TextArea(
		label <- o.text,
		mandatory <- o.mandatory
	)
	do {
		thisModule.id <- thisModule.id.inc();
		ta.elementId <- thisModule.id.toString();
	}
}

rule ClosedEndedQuestion_MA_2SelectionField {
	from c: qu!ClosedEndedQuestion (c.answers.size() > 1)
	to sf: fo!SelectionField (
		label <- c.text,
		selectionFieldType <- #Checkbox,
		items <- c.answers
	)
	do {
		thisModule.id <- thisModule.id.inc();
		sf.elementId <- thisModule.id.toString();
	}
}

rule ClosedEndedQuestion_SA_2SelectionField {
	from c: qu!ClosedEndedQuestion (c.answers.size() = 1)
	to sf: fo!SelectionField (
		label <- c.text,
		selectionFieldType <- #Radio,
		items <- c.answers
	)
	do {
		thisModule.id <- thisModule.id.inc();
		sf.elementId <- thisModule.id.toString();
	}
}

rule Answer2_Closed_SelectionItem {
	from a: qu!Answer(a.openAnswer = false)
	to si: fo!SelectionItem (
		label <- a.text
	)
}




